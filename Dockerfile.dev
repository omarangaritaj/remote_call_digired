# =============================================================================
# Development Dockerfile - Optimized for hot reload and debugging
# =============================================================================
FROM node:22.11.0-bullseye-slim

# Install system dependencies for build tools and development
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    make \
    g++ \
    libc6-dev \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Install global dependencies
RUN npm install -g @nestjs/cli nodemon

# Copy package files
COPY package*.json ./
COPY prisma ./prisma/

# Install ALL dependencies (including dev)
RUN npm ci

# Generate Prisma client
RUN npx prisma generate

# Copy source code
COPY . .

# Create startup script for development in multiple steps
RUN echo '#!/bin/bash' > /app/start-dev.sh
RUN echo 'set -e' >> /app/start-dev.sh
RUN echo 'echo "🗄️ Initializing database..."' >> /app/start-dev.sh
RUN echo 'npx prisma migrate deploy 2>/dev/null || echo "⚠️ Migration failed, trying db push..."' >> /app/start-dev.sh
RUN echo 'npx prisma db push --accept-data-loss 2>/dev/null || echo "⚠️ Database initialization failed, continuing..."' >> /app/start-dev.sh
RUN echo 'echo "✅ Database ready"' >> /app/start-dev.sh
RUN echo 'echo "🚀 Starting development server..."' >> /app/start-dev.sh
RUN echo 'exec "$@"' >> /app/start-dev.sh

# Make script executable
RUN chmod +x /app/start-dev.sh

# Verify script exists
RUN ls -la /app/start-dev.sh && cat /app/start-dev.sh

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=15s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Set environment to development
ENV NODE_ENV=development

# Start with database initialization
ENTRYPOINT ["/app/start-dev.sh"]
CMD ["npm", "run", "start:dev"]
